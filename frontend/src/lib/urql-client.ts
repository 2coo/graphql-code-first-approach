import BigNumber from "bignumber.js";
import type { Client } from "urql";
import { cacheExchange, createClient, fetchExchange } from "urql";
import type { IntrospectionQuery } from "graphql";

import customScalarsExchange from "urql-custom-scalars-exchange";

// this is the introspection.json file generated by graphql-codegen
import schema from "../gql/introspection.json";

export const urqlClient: Client = createClient({
  url: `http://localhost:4000/graphql`,
  fetchOptions: {
    credentials: "include",
  },
  exchanges: [
    // This customScalarsExchange should be above the cacheExchange
    customScalarsExchange({
      schema: schema as unknown as IntrospectionQuery,
      scalars: {
        Date: (value) => {
          if (typeof value === "string") return new Date(value);
          if (value instanceof Date) return value;
          return null;
        },
        BigNumber: (value) => {
          if (typeof value === "string") return new BigNumber(value);
          if (value instanceof BigNumber) return value;
          return null;
        },
      },
    }),
    cacheExchange,
    fetchExchange,
  ],
});
